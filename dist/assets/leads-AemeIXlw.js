import{d as f,r as n,o as k,e as u,j as l,f as m,F as p,l as g,x as v,m as x,p as d}from"./index-BWqLNhdj.js";import{a as i}from"./index-NIGUFBhG.js";const w=["onClick"],V=f({__name:"leads",setup(C){const o=n([]),r=n(""),s=n(""),y=async a=>{try{await i.delete(`/api/leads/${o.value[a].id}`),o.value=o.value.filter((e,t)=>t!==a)}catch(e){console.error(e)}},b=async()=>{try{await i.post("/api/leads",{email:r.value,data:s.value}),o.value.push({email:r.value,id:"1234",status:1})}catch(a){console.error(a)}};return k(async()=>{try{const a=await i.get("/api/leads");o.value=a.data}catch(a){console.error(a)}}),(a,e)=>(d(),u(p,null,[e[2]||(e[2]=l("h1",null,"Пользователи",-1)),(d(!0),u(p,null,g(o.value,(t,c)=>(d(),u("div",{key:c,class:"mt-2 flex flex-col items-start"},[l("h3",null,x(t.email),1),l("button",{onClick:B=>y(c)},"Удалить",8,w)]))),128)),e[3]||(e[3]=l("h2",{class:"mt-8"},"Имейл нового лида",-1)),m(l("input",{class:"bg-gray-300 border-2 border-black outline-none","onUpdate:modelValue":e[0]||(e[0]=t=>r.value=t),type:"text"},null,512),[[v,r.value]]),e[4]||(e[4]=l("h2",null,"Данные о новом лиде",-1)),m(l("textarea",{class:"bg-gray-300 border-2 border-black outline-none","onUpdate:modelValue":e[1]||(e[1]=t=>s.value=t)},null,512),[[v,s.value]]),l("button",{onClick:b},"Добавить")],64))}});export{V as default};
